#ifndef __px4_msgs__msg__AirspeedValidated__idl__
#define __px4_msgs__msg__AirspeedValidated__idl__

module px4_msgs
{
  module msg
  {
    module dds
    {

      @TypeCode(type="px4_msgs::msg::dds_::AirspeedValidated_")
      struct AirspeedValidated
      {
        /**
         * time since system start (microseconds)
         */
        unsigned long long timestamp;
        /**
         * indicated airspeed in m/s (IAS), set to NAN if invalid
         */
        float indicated_airspeed_m_s;
        /**
         * calibrated airspeed in m/s (CAS, accounts for instrumentation errors), set to NAN if invalid
         */
        float calibrated_airspeed_m_s;
        /**
         * true filtered airspeed in m/s (TAS), set to NAN if invalid
         */
        float true_airspeed_m_s;
        /**
         * CAS calculated from groundspeed - windspeed, where windspeed is estimated based on a zero-sideslip assumption, set to NAN if invalid
         */
        float calibrated_ground_minus_wind_m_s;
        /**
         * TAS calculated from groundspeed - windspeed, where windspeed is estimated based on a zero-sideslip assumption, set to NAN if invalid
         */
        float true_ground_minus_wind_m_s;
        /**
         * True if data from at least one airspeed sensor is declared valid.
         */
        boolean airspeed_sensor_measurement_valid;
        /**
         * 1-3: airspeed sensor index, 0: groundspeed-windspeed, -1: airspeed invalid
         */
        octet selected_airspeed_index;
        /**
         * filtered indicated airspeed derivative [m/s/s]
         */
        float airspeed_derivative_filtered;
        /**
         * filtered fixed-wing throttle [-]
         */
        float throttle_filtered;
        /**
         * filtered pitch [rad]
         */
        float pitch_filtered;
      };
    };
  };
};

#endif
