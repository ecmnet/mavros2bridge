#ifndef __px4_msgs__msg__EstimatorInnovations__idl__
#define __px4_msgs__msg__EstimatorInnovations__idl__

module px4_msgs
{
  module msg
  {
    module dds
    {

      /**
       * The innovation test ratios are scalar values. In case the field is a vector,
       * the test ratio will be put in the first component of the vector.
       */
      @TypeCode(type="px4_msgs::msg::dds_::EstimatorInnovations_")
      struct EstimatorInnovations
      {
        /**
         * time since system start (microseconds)
         */
        unsigned long long timestamp;
        /**
         * the timestamp of the raw data (microseconds)
         */
        unsigned long long timestamp_sample;
        /**
         * GPS
         * horizontal GPS velocity innovation (m/sec) and innovation variance ((m/sec)**2)
         */
        float gps_hvel[2];
        /**
         * vertical GPS velocity innovation (m/sec) and innovation variance ((m/sec)**2)
         */
        float gps_vvel;
        /**
         * horizontal GPS position innovation (m) and innovation variance (m**2)
         */
        float gps_hpos[2];
        /**
         * vertical GPS position innovation (m) and innovation variance (m**2)
         */
        float gps_vpos;
        /**
         * External Vision
         * horizontal external vision velocity innovation (m/sec) and innovation variance ((m/sec)**2)
         */
        float ev_hvel[2];
        /**
         * vertical external vision velocity innovation (m/sec) and innovation variance ((m/sec)**2)
         */
        float ev_vvel;
        /**
         * horizontal external vision position innovation (m) and innovation variance (m**2)
         */
        float ev_hpos[2];
        /**
         * vertical external vision position innovation (m) and innovation variance (m**2)
         */
        float ev_vpos;
        /**
         * Height sensors
         * range sensor height innovation (m) and innovation variance (m**2)
         */
        float rng_vpos;
        /**
         * barometer height innovation (m) and innovation variance (m**2)
         */
        float baro_vpos;
        /**
         * Auxiliary velocity
         * horizontal auxiliary velocity innovation from landing target measurement (m/sec) and innovation variance ((m/sec)**2)
         */
        float aux_hvel[2];
        /**
         * Optical flow
         * flow innvoation (rad/sec) and innovation variance ((rad/sec)**2)
         */
        float flow[2];
        /**
         * Various
         * heading innovation (rad) and innovation variance (rad**2)
         */
        float heading;
        /**
         * earth magnetic field innovation (Gauss) and innovation variance (Gauss**2)
         */
        float mag_field[3];
        /**
         * gravity innovation from accelerometerr vector (m/s**2)
         */
        float gravity[3];
        /**
         * drag specific force innovation (m/sec**2) and innovation variance ((m/sec)**2)
         */
        float drag[2];
        /**
         * airspeed innovation (m/sec) and innovation variance ((m/sec)**2)
         */
        float airspeed;
        /**
         * synthetic sideslip innovation (rad) and innovation variance (rad**2)
         */
        float beta;
        /**
         * height of ground innovation (m) and innovation variance (m**2)
         */
        float hagl;
        /**
         * height of ground rate innovation (m/s) and innovation variance ((m/s)**2)
         */
        float hagl_rate;
      };
    };
  };
};

#endif
