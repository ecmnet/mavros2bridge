#ifndef __px4_msgs__msg__VehicleControlMode__idl__
#define __px4_msgs__msg__VehicleControlMode__idl__

module px4_msgs
{
  module msg
  {
    module dds
    {

      @TypeCode(type="px4_msgs::msg::dds_::VehicleControlMode_")
      struct VehicleControlMode
      {
        /**
         * time since system start (microseconds)
         */
        unsigned long long timestamp;
        /**
         * synonym for actuator_armed.armed
         */
        boolean flag_armed;
        boolean flag_multicopter_position_control_enabled;
        /**
         * true if manual input is mixed in
         */
        boolean flag_control_manual_enabled;
        /**
         * true if onboard autopilot should act
         */
        boolean flag_control_auto_enabled;
        /**
         * true if offboard control should be used
         */
        boolean flag_control_offboard_enabled;
        /**
         * true if position is controlled
         */
        boolean flag_control_position_enabled;
        /**
         * true if horizontal velocity (implies direction) is controlled
         */
        boolean flag_control_velocity_enabled;
        /**
         * true if altitude is controlled
         */
        boolean flag_control_altitude_enabled;
        /**
         * true if climb rate is controlled
         */
        boolean flag_control_climb_rate_enabled;
        /**
         * true if acceleration is controlled
         */
        boolean flag_control_acceleration_enabled;
        /**
         * true if attitude stabilization is mixed in
         */
        boolean flag_control_attitude_enabled;
        /**
         * true if rates are stabilized
         */
        boolean flag_control_rates_enabled;
        /**
         * true if control allocation is enabled
         */
        boolean flag_control_allocation_enabled;
        /**
         * true if flighttermination is enabled
         */
        boolean flag_control_termination_enabled;
        /**
         * TODO: use dedicated topic for external requests
         * Mode ID (nav_state)
         */
        octet source_id;
      };
    };
  };
};

#endif
