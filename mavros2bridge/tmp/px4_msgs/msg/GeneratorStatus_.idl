#ifndef __px4_msgs__msg__GeneratorStatus__idl__
#define __px4_msgs__msg__GeneratorStatus__idl__

module px4_msgs
{
  module msg
  {
    module dds
    {
      /**
       * Generator is off.
       */
      const unsigned long long STATUS_FLAG_OFF =
      1;

      /**
       * Generator is ready to start generating power.
       */
      const unsigned long long STATUS_FLAG_READY =
      2;

      /**
       * Generator is generating power.
       */
      const unsigned long long STATUS_FLAG_GENERATING =
      4;

      /**
       * Generator is charging the batteries (generating enough power to charge and provide the load).
       */
      const unsigned long long STATUS_FLAG_CHARGING =
      8;

      /**
       * Generator is operating at a reduced maximum power.
       */
      const unsigned long long STATUS_FLAG_REDUCED_POWER =
      16;

      /**
       * Generator is providing the maximum output.
       */
      const unsigned long long STATUS_FLAG_MAXPOWER =
      32;

      /**
       * Generator is near the maximum operating temperature, cooling is insufficient.
       */
      const unsigned long long STATUS_FLAG_OVERTEMP_WARNING =
      64;

      /**
       * Generator hit the maximum operating temperature and shutdown.
       */
      const unsigned long long STATUS_FLAG_OVERTEMP_FAULT =
      128;

      /**
       * Power electronics are near the maximum operating temperature, cooling is insufficient.
       */
      const unsigned long long STATUS_FLAG_ELECTRONICS_OVERTEMP_WARNING =
      256;

      /**
       * Power electronics hit the maximum operating temperature and shutdown.
       */
      const unsigned long long STATUS_FLAG_ELECTRONICS_OVERTEMP_FAULT =
      512;

      /**
       * Power electronics experienced a fault and shutdown.
       */
      const unsigned long long STATUS_FLAG_ELECTRONICS_FAULT =
      1024;

      /**
       * The power source supplying the generator failed e.g. mechanical generator stopped, tether is no longer providing power, solar cell is in shade, hydrogen reaction no longer happening.
       */
      const unsigned long long STATUS_FLAG_POWERSOURCE_FAULT =
      2048;

      /**
       * Generator controller having communication problems.
       */
      const unsigned long long STATUS_FLAG_COMMUNICATION_WARNING =
      4096;

      /**
       * Power electronic or generator cooling system error.
       */
      const unsigned long long STATUS_FLAG_COOLING_WARNING =
      8192;

      /**
       * Generator controller power rail experienced a fault.
       */
      const unsigned long long STATUS_FLAG_POWER_RAIL_FAULT =
      16384;

      /**
       * Generator controller exceeded the overcurrent threshold and shutdown to prevent damage.
       */
      const unsigned long long STATUS_FLAG_OVERCURRENT_FAULT =
      32768;

      /**
       * Generator controller detected a high current going into the batteries and shutdown to prevent battery damage. |
       */
      const unsigned long long STATUS_FLAG_BATTERY_OVERCHARGE_CURRENT_FAULT =
      65536;

      /**
       * Generator controller exceeded it's overvoltage threshold and shutdown to prevent it exceeding the voltage rating.
       */
      const unsigned long long STATUS_FLAG_OVERVOLTAGE_FAULT =
      131072;

      /**
       * Batteries are under voltage (generator will not start).
       */
      const unsigned long long STATUS_FLAG_BATTERY_UNDERVOLT_FAULT =
      262144;

      /**
       * Generator start is inhibited by e.g. a safety switch.
       */
      const unsigned long long STATUS_FLAG_START_INHIBITED =
      524288;

      /**
       * Generator requires maintenance.
       */
      const unsigned long long STATUS_FLAG_MAINTENANCE_REQUIRED =
      1048576;

      /**
       * Generator is not ready to generate yet.
       */
      const unsigned long long STATUS_FLAG_WARMING_UP =
      2097152;

      /**
       * Generator is idle.
       */
      const unsigned long long STATUS_FLAG_IDLE =
      4194304;


      @TypeCode(type="px4_msgs::msg::dds_::GeneratorStatus_")
      struct GeneratorStatus
      {
        /**
         * time since system start (microseconds)
         */
        unsigned long long timestamp;
        /**
         * Status flags
         */
        unsigned long long status;
        /**
         * [A] Current into/out of battery. Positive for out. Negative for in. NaN: field not provided.
         */
        float battery_current;
        /**
         * [A] Current going to the UAV. If battery current not available this is the DC current from the generator. Positive for out. Negative for in. NaN: field not provided
         */
        float load_current;
        /**
         * [W] The power being generated. NaN: field not provided
         */
        float power_generated;
        /**
         * [V] Voltage of the bus seen at the generator, or battery bus if battery bus is controlled by generator and at a different voltage to main bus.
         */
        float bus_voltage;
        /**
         * [A] The target battery current. Positive for out. Negative for in. NaN: field not provided
         */
        float bat_current_setpoint;
        /**
         * [s] Seconds this generator has run since it was rebooted. UINT32_MAX: field not provided.
         */
        unsigned long runtime;
        /**
         * [s] Seconds until this generator requires maintenance.  A negative value indicates maintenance is past-due. INT32_MAX: field not provided.
         */
        long time_until_maintenance;
        /**
         * [rpm] Speed of electrical generator or alternator. UINT16_MAX: field not provided.
         */
        unsigned short generator_speed;
        /**
         * [degC] The temperature of the rectifier or power converter. INT16_MAX: field not provided.
         */
        short rectifier_temperature;
        /**
         * [degC] The temperature of the mechanical motor, fuel cell core or generator. INT16_MAX: field not provided.
         */
        short generator_temperature;
      };
    };
  };
};

#endif
