#ifndef __px4_msgs__msg__VehicleGlobalPosition__idl__
#define __px4_msgs__msg__VehicleGlobalPosition__idl__

module px4_msgs
{
  module msg
  {
    module dds
    {

      /**
       * Fused global position in WGS84.
       * This struct contains global position estimation. It is not the raw GPS
       * measurement (@see vehicle_gps_position). This topic is usually published by the position
       * estimator, which will take more sources of information into account than just GPS,
       * e.g. control inputs of the vehicle in a Kalman-filter implementation.
       * 
       */
      @TypeCode(type="px4_msgs::msg::dds_::VehicleGlobalPosition_")
      struct VehicleGlobalPosition
      {
        /**
         * time since system start (microseconds)
         */
        unsigned long long timestamp;
        /**
         * the timestamp of the raw data (microseconds)
         */
        unsigned long long timestamp_sample;
        /**
         * Latitude, (degrees)
         */
        double lat;
        /**
         * Longitude, (degrees)
         */
        double lon;
        /**
         * Altitude AMSL, (meters)
         */
        float alt;
        /**
         * Altitude above ellipsoid, (meters)
         */
        float alt_ellipsoid;
        boolean lat_lon_valid;
        boolean alt_valid;
        /**
         * Reset delta for altitude
         */
        float delta_alt;
        /**
         * Reset delta for terrain
         */
        float delta_terrain;
        /**
         * Counter for reset events on horizontal position coordinates
         */
        octet lat_lon_reset_counter;
        /**
         * Counter for reset events on altitude
         */
        octet alt_reset_counter;
        /**
         * Counter for reset events on terrain
         */
        octet terrain_reset_counter;
        /**
         * Standard deviation of horizontal position error, (metres)
         */
        float eph;
        /**
         * Standard deviation of vertical position error, (metres)
         */
        float epv;
        /**
         * Terrain altitude WGS84, (metres)
         */
        float terrain_alt;
        /**
         * Terrain altitude estimate is valid
         */
        boolean terrain_alt_valid;
        /**
         * True if this position is estimated through dead-reckoning
         */
        boolean dead_reckoning;
      };
    };
  };
};

#endif
