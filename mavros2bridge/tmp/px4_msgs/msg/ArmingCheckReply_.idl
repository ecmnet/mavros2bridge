#ifndef __px4_msgs__msg__ArmingCheckReply__idl__
#define __px4_msgs__msg__ArmingCheckReply__idl__

#include "px4_msgs/msg/./Event_.idl"
module px4_msgs
{
  module msg
  {
    module dds
    {
      const octet HEALTH_COMPONENT_INDEX_NONE =
      0;

      const octet HEALTH_COMPONENT_INDEX_AVOIDANCE =
      19;

      const octet ORB_QUEUE_LENGTH =
      4;


      @TypeCode(type="px4_msgs::msg::dds_::ArmingCheckReply_")
      struct ArmingCheckReply
      {
        /**
         * time since system start (microseconds)
         */
        unsigned long long timestamp;
        octet request_id;
        octet registration_id;
        /**
         * HEALTH_COMPONENT_INDEX_*
         */
        octet health_component_index;
        boolean health_component_is_present;
        boolean health_component_warning;
        boolean health_component_error;
        /**
         * whether arming is possible, and if it's a navigation mode, if it can run
         */
        boolean can_arm_and_run;
        octet num_events;
        px4_msgs::msg::dds::Event events[5];
        /**
         * Mode requirements
         */
        boolean mode_req_angular_velocity;
        boolean mode_req_attitude;
        boolean mode_req_local_alt;
        boolean mode_req_local_position;
        boolean mode_req_local_position_relaxed;
        boolean mode_req_global_position;
        boolean mode_req_mission;
        boolean mode_req_home_position;
        boolean mode_req_prevent_arming;
        boolean mode_req_manual_control;
      };
    };
  };
};

#endif
